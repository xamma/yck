name: Build and Release

on:
    push:
      tags:
        - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build for Linux
        run: |
          cd cmd/converter
          GOOS=linux GOARCH=amd64 go build -o ../../yck-linux-amd64

      - name: Build for Windows
        run: |
          cd cmd/converter
          GOOS=windows GOARCH=amd64 go build -o ../../yck-windows-amd64.exe

      - name: Build for MacOS
        run: |
          cd cmd/converter
          GOOS=darwin GOARCH=amd64 go build -o ../../yck-macos-amd64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }} for Linux MacOS and Windows
          draft: false
          prerelease: false

      - name: Upload Linux Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yck-linux-amd64
          asset_name: yck-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yck-windows-amd64.exe
          asset_name: yck-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload MacOS Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yck-macos-amd64
          asset_name: yck-macos-amd64
          asset_content_type: application/octet-stream